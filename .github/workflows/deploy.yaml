name: Build, Test and Deploy SmsGatewayLLM to VPS

on:
  push:
    branches:
      - main

jobs:
  # =============================
  # 1. СБОРКА + ТЕСТЫ
  # =============================
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      # Установка JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Сборка проекта + тесты
      - name: Build with Maven (with tests)
        run: mvn clean package

      # Проверка наличия JAR-файла
      - name: List target directory
        run: ls -la target/

      # Сохранение артефакта для деплоя
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/SmsGatewayLLM-0.0.1-SNAPSHOT.jar
          retention-days: 1

  # =============================
  # 2. ДЕПЛОЙ
  # =============================
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      # Подтянем репозиторий снова (для Dockerfile, конфигов и т.п.)
      - name: Checkout code
        uses: actions/checkout@v4

      # Загрузка артефакта
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./deploy

      # Проверим, что JAR на месте
      - name: List deploy dir
        run: ls -la ./deploy

      - name: Deploy to VPS
        env:
          SSH_USER: homic
          SSH_HOST: 91.146.28.240
          SSH_PASSWORD: 360317wifi
        run: |
          sudo apt-get update && sudo apt-get install -y sshpass

          if [ ! -f ./deploy/SmsGatewayLLM-0.0.1-SNAPSHOT.jar ]; then
            echo "Error: JAR file not found"
            exit 1
          fi

          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p /home/$SSH_USER/deploy/sms-gateway-llm/github-actions"

          # Копируем jar + Dockerfile (и можно добавить еще файлы по необходимости)
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no ./deploy/SmsGatewayLLM-0.0.1-SNAPSHOT.jar $SSH_USER@$SSH_HOST:/home/$SSH_USER/deploy/sms-gateway-llm/github-actions/app.jar
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no Dockerfile $SSH_USER@$SSH_HOST:/home/$SSH_USER/deploy/sms-gateway-llm/github-actions/Dockerfile

          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
            set -e
            cd /home/homic/deploy/sms-gateway-llm/github-actions
            ls -la

            docker stop sms-gateway-llm || true
            docker rm sms-gateway-llm || true
            docker rmi sms-gateway-llm:latest || true
            docker network create app-network || true

            docker build -t sms-gateway-llm:latest .
            docker run -d --name sms-gateway-llm --network app-network -p 8041:8041 sms-gateway-llm:latest
          EOF
